import os

Import('env')
with open(env['PROJECT_TOOL_S']) as f:
    exec(f.read())

SRCS = append_srcs_dir(ADir('src'))
INCLUDE = [ADir('include'), ADir('.')]
PRIVATE_INCLUDE = []
REQUIREMENTS = ['pthread', 'utilities', 'ax_msp', 'eventpp', 'StackFlow']
STATIC_LIB = []
DYNAMIC_LIB = []
DEFINITIONS = []
DEFINITIONS_PRIVATE = []
LDFLAGS = []
LINK_SEARCH_PATH = []
STATIC_FILES = []

DEFINITIONS += ['-std=c++17']
LDFLAGS+=['-Wl,-rpath=/opt/m5stack/lib', '-Wl,-rpath=/usr/local/m5stack/lib', '-Wl,-rpath=/usr/local/m5stack/lib/gcc-10.3', '-Wl,-rpath=/opt/lib', '-Wl,-rpath=/opt/usr/lib', '-Wl,-rpath=./']
LINK_SEARCH_PATH += [ADir('../static_lib')]
REQUIREMENTS += ['ax_engine', 'ax_interpreter', 'ax_sys']

INCLUDE += [ADir('src/runner')]
INCLUDE += [ADir('../include/opencv4')]
# LINK_SEARCH_PATH += [ADir('../static_lib/sherpa/onnx')]
# LDFLAGS += ['-l:libcargs.a', '-l:libonnxruntime.a',
#             '-l:libsherpa-onnx-core.a', '-l:libkaldi-native-fbank-core.a',
#             '-l:libkaldi-decoder-core.a', '-l:libssentencepiece_core.a']

# STATIC_FILES += [AFile('sherpa-onnx-kws-zipformer-gigaspeech-3.3M-2024-01-01.json'),
#                  AFile('sherpa-onnx-kws-zipformer-wenetspeech-3.3M-2024-01-01.json')]
static_file = Glob('../static_lib/module-llm/libabsl_*')
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libopencv_core.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libittnotify.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/liblibjpeg-turbo.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/liblibopenjp2.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/liblibpng.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/liblibtiff.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/liblibwebp.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libopencv_core.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libopencv_highgui.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libopencv_imgcodecs.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libopencv_imgproc.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libopencv_videoio.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libtegra_hal.a')]
static_file += [AFile('../static_lib/libopencv-4.6-aarch64-none/lib/libzlib.a')]
STATIC_LIB += static_file * 4

env['COMPONENTS'].append({'target':'llm_cv',
                          'SRCS':SRCS,
                          'INCLUDE':INCLUDE,
                          'PRIVATE_INCLUDE':PRIVATE_INCLUDE,
                          'REQUIREMENTS':REQUIREMENTS,
                          'STATIC_LIB':STATIC_LIB,
                          'DYNAMIC_LIB':DYNAMIC_LIB,
                          'DEFINITIONS':DEFINITIONS,
                          'DEFINITIONS_PRIVATE':DEFINITIONS_PRIVATE,
                          'LDFLAGS':LDFLAGS,
                          'LINK_SEARCH_PATH':LINK_SEARCH_PATH,
                          'STATIC_FILES':STATIC_FILES,
                          'REGISTER':'project'
                          })
